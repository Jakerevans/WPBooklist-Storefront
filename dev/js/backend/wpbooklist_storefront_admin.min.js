/**
 * JavaScript Admin Functions - wpbooklist-storefront-admin.min.js
 *
 * @author   Jake Evans
 * @category JavaScript
 * @package  Includes/Assets/Js
 * @version  6.0.0
 */

console.log( 'This is the JavaScript Object that holds all Storefront PHP Variables for use in JavaScript' );
console.log( wpbooklistStoreFrontPhpVariables );


console.log( 'This is the JavaScript Object that holds all CORE WPBookList Plugin PHP Variables for use in JavaScript' );
console.log( wpbooklistPhpVariables );


// All functions wrapped in jQuery( document ).ready()...
jQuery( document ).ready( function( $ ) {
	'use strict';

	/* BEGINNING SECTION TO CALL ALL FUNCTIONS IN FILE... */

	// Function to display the admin pointer message when entering the Question Mark image with mouse...
	wpbooklistStoreFrontAdminPointersJavascript();

	// Enables the Select2 library for selecting multiple libraries to add a book to.
	wpbooklistEnableStorefrontSelect2();

	// Reveals the additional Storefront fields if user chooses to create a WooCommerce Product.
	wpbooklistRevealStorefrontFieldsOnYes();

	// Function to save the Call-to-action text and the two images.
	wpbooklistSaveGeneralStorefrontSettings();

	// Function to save the WooCommerce Default Settings.
	wpbooklistSaveWooCommerceStorefrontSettings();


	// Function to reset the two images.
	wpbooklistResetStorefrontSettingsImages();

	// Function to save the WooCommerce Default Settings.
	function wpbooklistSaveWooCommerceStorefrontSettings(){

		$( '#wpbooklist-storefront-save-woocommerce-settings' ).click(function(event){

			var request = '';
	  		var defaultregularprice = $( '#wpbooklist-addbook-woo-regular-woo-price' ).val();
	  		var defaultsaleprice = $( '#wpbooklist-addbook-woo-sale-price' ).val();
	  		var defaultsku = $( '#wpbooklist-addbook-woo-sku' ).val();
	  		var defaultsalebegin = $( '#wpbooklist-addbook-woo-salebegin' ).val();
	  		var defaultsaleend = $( '#wpbooklist-addbook-woo-saleend' ).val();
	  		var defaultwidth = $( '#wpbooklist-addbook-woo-width' ).val();
	  		var defaultheight = $( '#wpbooklist-addbook-woo-height' ).val();
	  		var defaultweight = $( '#wpbooklist-addbook-woo-weight' ).val();
	  		var defaultlength = $( '#wpbooklist-addbook-woo-length' ).val();
	  		var defaultstock = $( '#wpbooklist-addbook-woo-stock' ).val();
	  		var defaultupsell = $( '#wpbooklist-addbook-woo-upsells' ).val();
	  		var defaultcrosssell = $( '#wpbooklist-addbook-woo-crosssells' ).val();
	  		var defaultcategory = $( '#wpbooklist-woocommerce-category-select' ).val();
	  		var defaultvirtual = $( '#wpbooklist-woocommerce-virtual-select' ).val();
	  		var defaultreviews = $( '#wpbooklist-woocommerce-enable-reviews-select' ).val();
	  		var defaultnote = $( '#wpbooklist-addbook-storefront-purchasenote' ).val();

	  		// Convert the Upsells and Crosssells to a string
	  		var finalcrossellstring = '';
	  		if ( null !== defaultcrosssell && undefined !== defaultcrosssell && 0 < defaultcrosssell.length ) {
	  			console.log('fdjsjafhdsh');
	  			for (var i = defaultcrosssell.length - 1; i >= 0; i--) {
	  				finalcrossellstring = finalcrossellstring + ',' +defaultcrosssell[i];
	  			}
	  		}

	  		// Convert the Upsells and Crosssells to a string
	  		var finalupsellstring = '';
	  		if ( null !== defaultupsell && undefined !== defaultupsell && 0 < defaultupsell.length ) {
	  			console.log('fdjsjafhdsh');
	  			for (var i = defaultupsell.length - 1; i >= 0; i--) {
	  				finalupsellstring = finalupsellstring + ',' +defaultupsell[i];
	  			}
	  		}


		  	var data = {
				'action': 'wpbooklist_save_woocommerce_storefront_settings_action',
				'security': wpbooklistStoreFrontPhpVariables.adminnonce2,
				'defaultregularprice':defaultregularprice,
				'defaultsaleprice':defaultsaleprice,
				'defaultsku': defaultsku,
				'defaultsalebegin':defaultsalebegin,
				'defaultsaleend':defaultsaleend,
				'defaultwidth':defaultwidth,	
				'defaultheight':defaultheight,	
				'defaultweight':defaultweight,	
				'defaultlength':defaultlength,
				'defaultstock':defaultstock,
				'defaultupsell':finalupsellstring,
				'defaultcrosssell':finalcrossellstring,
				'defaultcategory':defaultcategory,
				'defaultvirtual':defaultvirtual,
				'defaultreviews':defaultreviews,
				'defaultnote': defaultnote
			};

			console.log(data);

			$('#wpbooklist-spinner-1').animate({'opacity':'1'});

	  		

	     	request = $.ajax({
			    url: ajaxurl,
			    type: "POST",
			    data:data,
			    timeout: 0,
			    success: function(response) {

			    	console.log(response);

					$('#wpbooklist-spinner-1').animate({'opacity':'0'});

					$( '#wpbooklist-admin-addbook-response-actual-container' ).html( "<p class='wpbooklist-tab-intro-para'><span id='wpbooklist-success-span'>" + wpbooklistPhpVariables.trans38 + "</span><br/><br/>" + wpbooklistCommentsPhpVariables.trans67 + ' ' + wpbooklistPhpVariables.trans43 + "&nbsp;<a href='http://wpbooklist.com/index.php/extensions/'>" + wpbooklistPhpVariables.trans44 + "</a><br/><br/>" + wpbooklistPhpVariables.trans45 + "&nbsp;<a id='wpbooklist-addbook-success-review-link' href='https://wordpress.org/support/plugin/wpbooklist/reviews/?filter=5'>" + wpbooklistPhpVariables.trans46 + "</a><img id='wpbooklist-smile-icon-1' src='" + wpbooklistPhpVariables.ROOT_IMG_ICONS_URL + "happy.svg'></p>" );

			    },
				error: function(jqXHR, textStatus, errorThrown) {
					console.log(errorThrown);
		            console.log(textStatus);
		            console.log(jqXHR);
				}
			});

			event.preventDefault ? event.preventDefault() : event.returnValue = false;
	  	});
	}



	// Function to reset the two images.
	function wpbooklistResetStorefrontSettingsImages(){

		$("#wpbooklist-storefront-img-remove-1").click(function(event){
  			$('#wpbooklist-storefront-preview-img-1').attr('src', wpbooklistPhpVariables.ROOT_IMG_ICONS_URL + 'book-placeholder.svg');
  		});

  		$("#wpbooklist-storefront-img-remove-2").click(function(event){
  			$('#wpbooklist-storefront-preview-img-2').attr('src', wpbooklistPhpVariables.ROOT_IMG_ICONS_URL + 'book-placeholder.svg');
  		});

  	}


	// Function to save the Call-to-action text and the two images.
	function wpbooklistSaveGeneralStorefrontSettings(){

		$( '#wpbooklist-storefront-save-settings' ).click(function(event){

			var request = '';
			var addBookSuccess1 = '';
			var endMessage = '';
	  		var callToAction = $('#wpbooklist-storefront-call-to-action-input').val();
	  		var libImg = $('#wpbooklist-storefront-preview-img-1').attr('src');
	  		var bookImg = $('#wpbooklist-storefront-preview-img-2').attr('src');

		  	var data = {
				'action': 'wpbooklist_storefront_settings_action',
				'security': wpbooklistStoreFrontPhpVariables.adminnonce1,
				'calltoaction':callToAction,
				'libimg':libImg,
				'bookimg':bookImg			
			};

			$('#wpbooklist-spinner-storefront-lib').animate({'opacity':'1'});

	  		$('#wpbooklist-storefront-success-div').html('');
	  		$('#wpbooklist-spinner-storefront-lib').animate({'opacity':'1'});

	     	request = $.ajax({
			    url: ajaxurl,
			    type: "POST",
			    data:data,
			    timeout: 0,
			    success: function(response) {

				addBookSuccess1 = '<p class="wpbooklist-tab-intro-para"><span id="wpbooklist-success-span">' + wpbooklistPhpVariables.trans38 + '</span><br/> ' + wpbooklistStoreFrontPhpVariables.storefronttrans40 + ' <span class="wpbooklist-bold-shortcode">';

				endMessage = '<div id="wpbooklist-addbook-success-thanks"><p class="wpbooklist-tab-intro-para">' + wpbooklistPhpVariables.trans43 + ' <a href="http://wpbooklist.com/index.php/extensions/">' + wpbooklistPhpVariables.trans44 + '</a></p><p class="wpbooklist-tab-intro-para">' + wpbooklistPhpVariables.trans45 + ' <a id="wpbooklist-addbook-success-review-link" href="https://wordpress.org/support/plugin/wpbooklist/reviews/?filter=5" >' + wpbooklistPhpVariables.trans46 + '</a></p><img id="wpbooklist-smile-icon-1" src="' + wpbooklistPhpVariables.ROOT_IMG_ICONS_URL + 'happy.svg"></div>';

			    	$('#wpbooklist-spinner-storefront-lib').animate({'opacity':'0'});
			    	$('#wpbooklist-storefront-success-div').html( addBookSuccess1 + endMessage )

			    },
				error: function(jqXHR, textStatus, errorThrown) {
					console.log(errorThrown);
		            console.log(textStatus);
		            console.log(jqXHR);
				}
			});

			event.preventDefault ? event.preventDefault() : event.returnValue = false;
	  	});
	}

	// Reveals the additional Storefront fields if user chooses to create a WooCommerce Product.
	function wpbooklistRevealStorefrontFieldsOnYes() {

		var div = $( '#wpbooklist-book-form-storefront-initial-hidden-fields' );
		var curHeight = 0;
		var autoHeight = 0;

		$(document).on( 'change', '#wpbooklist-addbook-storefront-select-woocommerce', function(event){

			if ( wpbooklistStoreFrontPhpVariables.storefronttrans24 === $(this).val() ) {

				// Get Default Height
				curHeight = div.height();

				// Get Auto Height
				autoHeight = div.css( 'height', 'auto' ).height();

				// Reset to Default Height
				div.height( curHeight );

				// Animate to Auto Height
				div.stop().animate({
					height: autoHeight,
					opacity: 1
				}, {
					duration: 1000,
					complete: function() {
						div.css({'height': 'auto', 'pointer-events': 'all'});
					}
				});

			} else {

				// Animate to 0 Height
				div.stop().animate({
					height: '0px',
					opacity: 0
				}, {
					duration: 1000,
					complete: function() {
						div.css({'pointer-events': 'none'});
					}
				});

			}

		});

	}

	// Enables the Select2 library for selecting multiple libraries to add a book to.
	function wpbooklistEnableStorefrontSelect2() {

		// Adding in the line to enable the select2.js file
        $('.storefront-select2-upsells').select2();
        $('.storefront-select2-crosssells').select2();

        $(document).on("click",".wpbooklist-edit-actions-edit-button, #wpbooklist-woocommerce-yes", function(event){
            $('.storefront-select2-upsells').select2();
            $('.storefront-select2-crosssells').select2();
        });
	}


	/* ENDING SECTION TO CALL ALL FUNCTIONS IN FILE... */

	// Function to display the admin pointer message when entering the Question Mark image with mouse...
	function wpbooklistStoreFrontAdminPointersJavascript() {

		$( 'body' ).on( 'mouseenter', '.wpbooklist-icon-image-question', function() {

			var label = $( this ).attr( 'data-label' );
			var pointer;

			// Switch for which admin message to display
			switch ( label ) {
			case 'book-form-isbn10':
				pointer = $( this ).pointer({
					content: '<h3>' + wpbooklistPhpVariables.trans135 + '</h3><p class="wpbooklist-admin-pointer">' + wpbooklistPhpVariables.trans173 + '.</p>',
					position: {
						edge: 'right',
						align: 'right'
					}
				});
				break;
			default:
			}

			// Open the pointer on mouseenter.
			pointer.pointer( 'open' );

			// Close the pointer on mouseleave.
			$( 'body' ).on( 'mouseleave', '.wpbooklist-icon-image-question', function() {
				pointer.pointer( 'close' );
			});

		});

		$( 'body' ).on( 'mouseenter', '.wpbooklist-icon-image-question-with-link', function() {

			var label = $( this ).attr( 'data-label' );
			var pointer;

			// Switch for which admin message to display
			switch ( label ) {
			case 'book-form-libraries':
				pointer = $( this ).pointer({
					content: '<h3>' + wpbooklistPhpVariables.trans203 + '</h3><p class="wpbooklist-admin-pointer">' + wpbooklistPhpVariables.trans204 + wpbooklistPhpVariables.SETTINGS_PAGE_URL + wpbooklistPhpVariables.trans205 + '.</p>',
					position: {
						edge: 'right',
						align: 'right'
					}
				});
				break;
			default:
			}

			// Open the pointer on mouseenter
			pointer.pointer( 'open' );

		});
	}
});
