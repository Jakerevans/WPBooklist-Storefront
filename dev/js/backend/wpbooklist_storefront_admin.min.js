/**
 * JavaScript Admin Functions - wpbooklist-storefront-admin.min.js
 *
 * @author   Jake Evans
 * @category JavaScript
 * @package  Includes/Assets/Js
 * @version  6.0.0
 */

console.log( 'This is the JavaScript Object that holds all PHP Variables for use in JavaScript' );
console.log( wpbooklistStoreFrontPhpVariables );


// All functions wrapped in jQuery( document ).ready()...
jQuery( document ).ready( function( $ ) {
	'use strict';

	/* BEGINNING SECTION TO CALL ALL FUNCTIONS IN FILE... */

	// Function to display the admin pointer message when entering the Question Mark image with mouse...
	wpbooklistStoreFrontAdminPointersJavascript();

	// Enables the Select2 library for selecting multiple libraries to add a book to.
	wpbooklistEnableStorefrontSelect2();

	// Reveals the additional Storefront fields if user chooses to create a WooCommerce Product.
	wpbooklistRevealStorefrontFieldsOnYes();
















	// Reveals the additional Storefront fields if user chooses to create a WooCommerce Product.
	function wpbooklistRevealStorefrontFieldsOnYes() {

		var div = $( '#wpbooklist-book-form-storefront-initial-hidden-fields' );
		var curHeight = 0;
		var autoHeight = 0;

		$(document).on( 'change', '#wpbooklist-addbook-storefront-select-woocommerce', function(event){

			if ( wpbooklistStoreFrontPhpVariables.trans24 === $(this).val() ) {

				// Get Default Height
				curHeight = div.height();

				// Get Auto Height
				autoHeight = div.css( 'height', 'auto' ).height();

				// Reset to Default Height
				div.height( curHeight );

				// Animate to Auto Height
				div.stop().animate({
					height: autoHeight,
					opacity: 1
				}, {
					duration: 1000,
					complete: function() {
						div.css({'height': 'auto', 'pointer-events': 'all'});
					}
				});

			} else {

				// Animate to 0 Height
				div.stop().animate({
					height: '0px',
					opacity: 0
				}, {
					duration: 1000,
					complete: function() {
						div.css({'pointer-events': 'none'});
					}
				});

			}

		});

	}

	// Enables the Select2 library for selecting multiple libraries to add a book to.
	function wpbooklistEnableStorefrontSelect2() {

		// Adding in the line to enable the select2.js file
        $('.storefront-select2-upsells').select2();
        $('.storefront-select2-crosssells').select2();

        $(document).on("click",".wpbooklist-edit-actions-edit-button, #wpbooklist-woocommerce-yes", function(event){
            $('.storefront-select2-upsells').select2();
            $('.storefront-select2-crosssells').select2();
        });
	}


	/* ENDING SECTION TO CALL ALL FUNCTIONS IN FILE... */

	// Function to display the admin pointer message when entering the Question Mark image with mouse...
	function wpbooklistStoreFrontAdminPointersJavascript() {

		$( 'body' ).on( 'mouseenter', '.wpbooklist-icon-image-question', function() {

			var label = $( this ).attr( 'data-label' );
			var pointer;

			// Switch for which admin message to display
			switch ( label ) {
			case 'book-form-isbn10':
				pointer = $( this ).pointer({
					content: '<h3>' + wpbooklistPhpVariables.trans135 + '</h3><p class="wpbooklist-admin-pointer">' + wpbooklistPhpVariables.trans173 + '.</p>',
					position: {
						edge: 'right',
						align: 'right'
					}
				});
				break;
			default:
			}

			// Open the pointer on mouseenter.
			pointer.pointer( 'open' );

			// Close the pointer on mouseleave.
			$( 'body' ).on( 'mouseleave', '.wpbooklist-icon-image-question', function() {
				pointer.pointer( 'close' );
			});

		});

		$( 'body' ).on( 'mouseenter', '.wpbooklist-icon-image-question-with-link', function() {

			var label = $( this ).attr( 'data-label' );
			var pointer;

			// Switch for which admin message to display
			switch ( label ) {
			case 'book-form-libraries':
				pointer = $( this ).pointer({
					content: '<h3>' + wpbooklistPhpVariables.trans203 + '</h3><p class="wpbooklist-admin-pointer">' + wpbooklistPhpVariables.trans204 + wpbooklistPhpVariables.SETTINGS_PAGE_URL + wpbooklistPhpVariables.trans205 + '.</p>',
					position: {
						edge: 'right',
						align: 'right'
					}
				});
				break;
			default:
			}

			// Open the pointer on mouseenter
			pointer.pointer( 'open' );

		});
	}
});
